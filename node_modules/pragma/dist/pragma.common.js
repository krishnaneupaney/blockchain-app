'use strict';

module.exports = function (input, ref) {
  if ( ref === void 0 ) ref = {};
  var parseContent = ref.parseContent; if ( parseContent === void 0 ) parseContent = function (source) { return new Function(("return " + source))(); };

  if (typeof input !== 'string') {
    throw new Error('Expected input to be string')
  }

  var ast = require('babylon').parse(input, {sourceType: 'module', plugins: ['*']});
  var comments = ast.tokens.filter(function (token) { return ['CommentBlock', 'CommentLine'].indexOf(token.type) > -1; });

  var re = /^\s*@([\w_-]+)(?:[\s\n])([\s\S]+)$/;
  var codes = {};
  for (var i = 0, list = comments; i < list.length; i += 1) {
    var comment = list[i];

    if (re.test(comment.value)) {
      var ref$1 = re.exec(comment.value);
      var namespace = ref$1[1];
      var content = ref$1[2];
      if (codes[namespace]) {
        throw new Error(("Duplicated namespace: " + namespace))
      } else {
        codes[namespace] = parseContent(content);
      }
    }
  }

  return codes
};
